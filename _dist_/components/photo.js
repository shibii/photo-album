import './photo.css.proxy.js';
/* src\components\photo.svelte generated by Svelte v3.29.0 */
import {
	SvelteComponent,
	action_destroyer,
	attr,
	detach,
	element,
	init,
	insert,
	is_function,
	listen,
	noop,
	run_all,
	safe_not_equal,
	toggle_class
} from "../../web_modules/svelte/internal.js";

import { iobserve } from "../../web_modules/@shibiii/svelte-iobserve.js";
import { srcsetstr, srcstr } from "../util/util.js";

function create_fragment(ctx) {
	let img;
	let img_src_value;
	let iobserve_action;
	let mounted;
	let dispose;

	return {
		c() {
			img = element("img");
			if (img.src !== (img_src_value = /*src*/ ctx[6])) attr(img, "src", img_src_value);
			attr(img, "srcset", /*srcset*/ ctx[3]);
			attr(img, "sizes", /*sizes*/ ctx[2]);
			attr(img, "alt", /*alt*/ ctx[0]);
			attr(img, "class", "svelte-7ih2e");
			toggle_class(img, "loaded", /*loaded*/ ctx[5]);
		},
		m(target, anchor) {
			insert(target, img, anchor);

			if (!mounted) {
				dispose = [
					listen(img, "load", function () {
						if (is_function(/*onLoad*/ ctx[4])) /*onLoad*/ ctx[4].apply(this, arguments);
					}),
					action_destroyer(iobserve_action = iobserve.call(null, img, {
						onIntersect: /*onIntersect*/ ctx[7],
						update: /*photo*/ ctx[1],
						once: true
					}))
				];

				mounted = true;
			}
		},
		p(new_ctx, [dirty]) {
			ctx = new_ctx;

			if (dirty & /*src*/ 64 && img.src !== (img_src_value = /*src*/ ctx[6])) {
				attr(img, "src", img_src_value);
			}

			if (dirty & /*srcset*/ 8) {
				attr(img, "srcset", /*srcset*/ ctx[3]);
			}

			if (dirty & /*sizes*/ 4) {
				attr(img, "sizes", /*sizes*/ ctx[2]);
			}

			if (dirty & /*alt*/ 1) {
				attr(img, "alt", /*alt*/ ctx[0]);
			}

			if (iobserve_action && is_function(iobserve_action.update) && dirty & /*photo*/ 2) iobserve_action.update.call(null, {
				onIntersect: /*onIntersect*/ ctx[7],
				update: /*photo*/ ctx[1],
				once: true
			});

			if (dirty & /*loaded*/ 32) {
				toggle_class(img, "loaded", /*loaded*/ ctx[5]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(img);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { alt } = $$props;
	let { photo } = $$props;
	let { sizes } = $$props;
	let srcset;
	let onLoad;
	let loaded;

	const onChange = () => {
		$$invalidate(3, srcset = null);
		$$invalidate(5, loaded = false);
		$$invalidate(4, onLoad = null);
	};

	const onIntersect = () => {
		$$invalidate(3, srcset = srcsetstr(photo));

		$$invalidate(4, onLoad = () => {
			$$invalidate(5, loaded = true);
		});
	};

	$$self.$$set = $$props => {
		if ("alt" in $$props) $$invalidate(0, alt = $$props.alt);
		if ("photo" in $$props) $$invalidate(1, photo = $$props.photo);
		if ("sizes" in $$props) $$invalidate(2, sizes = $$props.sizes);
	};

	let src;

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*photo*/ 2) {
			$: $$invalidate(6, src = srcstr(photo));
		}

		if ($$self.$$.dirty & /*photo*/ 2) {
			$: onChange(photo);
		}
	};

	return [alt, photo, sizes, srcset, onLoad, loaded, src, onIntersect];
}

class Photo extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { alt: 0, photo: 1, sizes: 2 });
	}
}

export default Photo;